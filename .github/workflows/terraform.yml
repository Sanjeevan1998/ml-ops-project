name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main-iac
  push:
    branches:
      - main-iac
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run against"
        required: true
        default: "DEVELOPMENT"
        type: choice
        options:
          - DEVELOPMENT
          - STAGING
          - CANARY
          - PRODUCTION
      action:
        description: "Action to perform"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

env:
  TF_VERSION: 1.6.0

jobs:
  terraform:
    name: Terraform Plan / Apply / Destroy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}   # << Binds to selected GitHub Environment (critical!)
    env:    
      TF_VAR_APPLICATION_CREDENTIAL_ID: ${{ vars.TF_VAR_APPLICATION_CREDENTIAL_ID }}
      TF_VAR_APPLICATION_CREDENTIAL_SECRET: ${{ vars.TF_VAR_APPLICATION_CREDENTIAL_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Verify Variables
        run: |
          echo ""
          echo "âœ… Showing available Terraform variables:"
          printenv 

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -var-file=env/development.tfvars

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Conditional Apply or Destroy
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [[ "${{ github.event.inputs.action }}" == "apply" ]]; then
            echo "Applying infrastructure..."
            terraform apply tfplan
          elif [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
            echo "Destroying infrastructure..."
            terraform destroy -auto-approve -var-file=env/development.tfvars
          else
            echo "Unknown action: ${{ github.event.inputs.action }}"
            exit 1
          fi
