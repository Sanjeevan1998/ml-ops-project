name: Terraform CI/CD

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Action to perform"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

env:
  TF_VERSION: 1.2.9

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: DEVELOPMENT
    env:
      TF_VAR_APPLICATION_CREDENTIAL_ID: ${{ secrets.APPLICATION_CREDENTIAL_ID }}
      TF_VAR_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.APPLICATION_CREDENTIAL_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init 
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var-file=env/development.tfvars
        working-directory: terraform

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/tfplan

  approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: APPROVAL
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Wait for manual approval
        run: echo "Waiting for manual approval..."

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: approval
    if: ${{ github.event.inputs.action == 'apply' }}
    environment: DEVELOPMENT
    env:
      TF_VAR_APPLICATION_CREDENTIAL_ID: ${{ secrets.APPLICATION_CREDENTIAL_ID }}
      TF_VAR_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.APPLICATION_CREDENTIAL_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download tfplan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform/

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply tfplan
        working-directory: terraform

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: approval
    if: ${{ github.event.inputs.action == 'destroy' }}
    environment: DEVELOPMENT
    env:
      TF_VAR_APPLICATION_CREDENTIAL_ID: ${{ secrets.APPLICATION_CREDENTIAL_ID }}
      TF_VAR_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.APPLICATION_CREDENTIAL_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var-file=env/development.tfvars
        working-directory: terraform
